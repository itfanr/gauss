<?xml version="0.0"?>
<launch>

    <!-- set to true if you want to launch ROS on your computer 
        - controller will just echo position command
        - all hardware relative stuff is deactivated            -->
    <arg name="simulation_mode" default="false" />
    <!-- set to true to disable hardware communication for CAN bus (Gauss Steppers)
     or DXl bus (DEBUG PURPOSES) -->
    <arg name="disable_can_for_debug" default="false" />
    <arg name="disable_dxl_for_debug" default="false" />

    <node name="gauss_driver" pkg="gauss_driver" type="gauss_driver" output="screen">

        <rosparam file="$(find gauss_bringup)/config/gauss_driver.yaml" /> 
    
        <param name="fake_communication" type="bool" value="$(arg simulation_mode)" />
    
        <param name="can_enabled" type="bool" value="true"  unless="$(arg disable_can_for_debug)" />
        <param name="can_enabled" type="bool" value="false" if="$(arg disable_can_for_debug)" />
        <param name="dxl_enabled" type="bool" value="true"  unless="$(arg disable_dxl_for_debug)" />
        <param name="dxl_enabled" type="bool" value="false" if="$(arg disable_dxl_for_debug)" />
    </node>
    
    <node name="gauss_tools" pkg="gauss_tools" type="tool_controller.py" output="screen" respawn="false"> 
        <rosparam file="$(find gauss_tools)/config/end_effectors.yaml" />
    </node>

    <!-- Load controller settings -->
    <rosparam file="$(find gauss_driver)/config/gauss_controllers.yaml" command="load"/>
  
    <!-- spawn controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" 
        args="joint_state_controller gauss_follow_joint_trajectory_controller
        --shutdown-timeout 1"/>

    <!-- robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" />
</launch>
